(function () {
    if (window['askAvnetConfig'][0]) {
        var configObject = window['askAvnetConfig'][0],
            botId = 'askavnetbot',
            params = [],
            isMobile = false;

        // Iterating through the config object and creating the param array
        for (var key in configObject) {
            if (key == 'botId') {
                botId = configObject[key];	// Fetching the botId if available		  
            } else {
                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(configObject[key]));
            }

            // Push sisterSite param to array
            if (key == 'site') {
                params.push('sisterSite=' + encodeURIComponent(configObject[key]));
            }
        }

        // Inserting the directline token to the param array based on botId
        if (botId == 'dev-askavnetbot') {
            params.push('s=VV4jwME0N_4.cwA.lnU.JHuVpnrFJ4Dy8iX2S9aJbw71_m4w3TeIzYS2_BslnA4');
        } else if (botId == 'test-askavnetbot') {
            params.push('s=fF9DAE2DA-g.cwA.y-o.tyutd1zXD4ibAxAEqBQP0o4LHAaBZvwOXIl7m6PW49Y');
        } else if (botId == 'uat-askavnetbot') {
            params.push('s=dJJK7F-ypQQ.cwA.0pw.5KY6AddzVRuYfk4mBt2_DT700FbX2vN25pUxTd7NEeg');
        } else {
            params.push('s=EnwBm4fiXn8.cwA.TBQ.EWrJH0Ovv8WP9Hh6SNFPvZlj-XsEEkBWArlISllswL8');   // Default token is that of prod
        }

        //Styles for bot
        var st = 'style="box-sizing: border-box;border-radius: 10px;"'
        var cbOut = { 'z-index': 99999, 'width': '447px', 'height': '100%', 'display': 'block' };
        var cbIn = { 'width': '447px', 'height': '100%' };

        function checkScreenwidth(x) {
            if (x.matches) { // If media query matches				
                params.push('device=mobile');
                isMobile = true;
                st = 'style="box-sizing: border-box;border-radius: 0px;z-index: 9"';
                cbOut = { 'z-index': 99999, 'width': '100%', 'height': '100%', 'display': 'block' };
                cbIn = { 'width': '100%', 'height': '100%' };
            }
            else {
                st = 'style="box-sizing: border-box;border-radius: 10px;"'
                cbOut = { 'z-index': 99999, 'width': '447px', 'height': '100%', 'display': 'block' };
                cbIn = { 'width': '447px', 'height': '100%' };
            }
        }
        var mediaQuery = window.matchMedia("(min-width: 220px) and (max-width: 767px)");
        checkScreenwidth(mediaQuery);
        mediaQuery.addListener(checkScreenwidth);

        // Forming the bot domain and base URL
        var baseUri = 'https://' + botId + '.azurewebsites.net';
        var url = baseUri + '/styles/html/chat.html?' + params.join('&');   // Appending all the request parameters to url

        // Creating chat bot container
        var chatbot = document.createElement('div');
        chatbot.id = 'chatbotOut';
        chatbot.style.cssText = 'position: fixed;bottom: 0px;max-height: 670px;right: 0px;z-index: 9;border-radius: 10px;box-sizing: border-box;'
        chatbot.innerHTML = '<object id="chatbotIn"' + st + 'type="text/html" data="' + url + '"></object>';

        // Function to apply styles to the bot window and popup
        function css(targetId, rules) {
            var target = document.getElementById(targetId);
            for (var k in rules) {
                target.style[k] = rules[k];
            }
        }

        // Applying styles to the bot window
        window.addEventListener('message', function (event) {
            if (baseUri == event.origin) {
                if (event.data.hasOwnProperty("OpenChat")) {
                    css('chatbotOut', cbOut);
                    css('chatbotIn', cbIn);
                    if (isMobile) {
                        document.body.style.position = "fixed";
                    }
                }

                if (event.data.hasOwnProperty("CloseChat")) {
                    css('chatbotOut', { 'z-index': 99999, 'width': '105px', 'height': '65px' });
                    css('chatbotIn', { 'width': '105px', 'height': '65px' });
                    if (isMobile) {
                        document.body.style.position = "relative";
                    }
                }

                if (event.data.hasOwnProperty("introalert")) {
                    css('chatbotOut', { 'z-index': 99999, 'width': '420px', 'height': '240px', 'display': 'block' });
                    css('chatbotIn', { 'width': '420px', 'height': '240px' });
                }
            }
        });

        // Append the bot to document body
        document.body.appendChild(chatbot);
    }
})(window, document);